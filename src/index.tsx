import axios from 'axios'
import React, { ChangeEvent, useEffect, useState } from 'react'
import ReactDOM from 'react-dom/client';

// Types
type CommentType = {
    postId: number
    id: number
    name: string
    email: string
    body: string
}

// Api
const instance = axios.create({
    baseURL: 'https://jsonplaceholder.typicode.com/'
})

const commentsAPI = {
    getComments() {
        return instance.get<CommentType[]>('comments?_limit=10')
    },
    createComment(body: string) {
        const payload = {
            body,
            email: 'test@gmail.com',
            name: 'Name',
            postId: Math.random()
        }
        // Promise.resolve() —Å—Ç–æ–∏—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–∞–≥–ª—É—à–∫–∏, —á—Ç–æ–±—ã TS –Ω–µ —Ä—É–≥–∞–ª—Å—è –∏ –∫–æ–¥ –∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–ª—Å—è
        // Promise.resolve() –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏ –Ω–∞–ø–∏—Å–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        // return Promise.resolve()
        return instance.post<CommentType[]>('comments', payload)
    }
}


// App
export const App = () => {

    const [comments, setComments] = useState<CommentType[]>([])
    const [commentBody, setCommentBody] = useState('')

    useEffect(() => {
        commentsAPI.getComments()
            .then((res) => {
                setComments(res.data)
            })
    }, [])

    const createPostHandler = () => {
        commentsAPI.createComment(commentBody)
            .then((res: any) => {
                const newComment = res.data
                setComments([newComment, ...comments])
                setCommentBody('')
            })
    };

    const createTitleHandler = (e: ChangeEvent<HTMLInputElement>) => {
        setCommentBody(e.currentTarget.value)
    };

    return (
        <>
            <h1>üìù –°–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤</h1>

            <div style={{marginBottom: '15px'}}>
                <input style={{width: '300px'}}
                       type="text"
                       value={commentBody}
                       placeholder={'–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç—Ä–∞—Ä–∏–π'}
                       onChange={createTitleHandler}
                />
                <button style={{marginLeft: '15px'}}
                        onClick={() => createPostHandler()}>
                    –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
                </button>
            </div>

            {
                comments.map(c => {
                    return <div key={c.id}><b>Comment</b>: {c.body} </div>
                })
            }
        </>
    )
}

const root = ReactDOM.createRoot(document.getElementById('root') as HTMLElement);
root.render(<App/>)

// –û–ø–∏—Å–∞–Ω–∏–µ:
// –ù–∞–ø–∏—à–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è.
// –¢–∏–ø–∏–∑–∞—Ü–∏—é –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ –æ—Ç–≤–µ—Ç–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ –∏ —É–∫–∞–∑–∞—Ç—å (–≤ –æ—Ç–≤–µ—Ç–∞—Ö —É—á—Ç–µ–Ω—ã –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞).
// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é –≤–µ—Ä—Å–∏—é —Å—Ç—Ä–æ–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞.
// –ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞: return Promise.resolve<PostType[]>(data)

// return instance.post<CommentType[]>('comments', {body: body})  ------
// return instance.post<CommentType[]>('comments', {body: payload.body})   ????—Ä–µ—à–µ–Ω–∏–µ –º–æ–µ

// return instance.post<CommentType[]>('comments', payload)  ????—Ä–µ—à–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞
// —Ä–µ—à–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞